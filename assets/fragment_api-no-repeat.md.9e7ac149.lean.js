import{_ as s,o as n,c as a,a as l}from"./app.f983686f.js";const p="/blog/assets/2024-04-16-16-01-56.0f2eeef2.png",o="/blog/assets/2024-04-16-17-22-00.eef1000a.png",e="/blog/assets/2024-04-16-17-23-18.2bad2a94.png",r="/blog/assets/2024-04-16-17-25-36.abbf51b0.png",E=JSON.parse('{"title":"前端接口防止重复请求实现方案","description":"","frontmatter":{},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"方案一：使用 axios 拦截器","slug":"方案一-使用-axios-拦截器","link":"#方案一-使用-axios-拦截器","children":[]},{"level":2,"title":"方案二：根据请求生成对应的 key","slug":"方案二-根据请求生成对应的-key","link":"#方案二-根据请求生成对应的-key","children":[]},{"level":2,"title":"方案三：相同的请求共享","slug":"方案三-相同的请求共享","link":"#方案三-相同的请求共享","children":[]},{"level":2,"title":"补充","slug":"补充","link":"#补充","children":[]}],"relativePath":"fragment/api-no-repeat.md","lastUpdated":1713259744000}'),c={name:"fragment/api-no-repeat.md"},B=l("",30),t=[B];function y(F,i,A,b,u,C){return n(),a("div",null,t)}const d=s(c,[["render",y]]);export{E as __pageData,d as default};
